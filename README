# Gestión de Empleados - Backend

Este proyecto es el backend de una aplicación de gestión de empleados, desarrollado con Node.js, Express y MongoDB.

## Requisitos

- Node.js (v14 o superior)
- MongoDB (local o en la nube)
- Git

## Instalación

1. **Clona el repositorio:**

   ```bash
   git clone https://github.com/tu-usuario/gestion-empleados-backend.git
   cd gestion-empleados-backend
   ```

2. **Instala las dependencias:**

   ```bash
   npm install
   ```

3. **Configura la base de datos:**

   Asegúrate de que MongoDB esté corriendo en tu máquina local o actualiza la URI de conexión en `Backend/database.js` si usas un servidor remoto.

4. **Inicia el servidor:**

   ```bash
   npm run dev
   ```

   El backend estará disponible en `http://localhost:3000`.

## Endpoints principales

- `POST /api/usuarios/register` — Registrar usuario
- `POST /api/usuarios/login` — Iniciar sesión
- `GET /api/usuarios` — Obtener todos los usuarios
- `GET /api/usuarios/:id` — Obtener usuario por ID
- `GET /api/empleados` — Obtener todos los empleados
- `GET /api/productos` — Obtener todos los productos


## Estructura del Proyecto

```
GESTION - EMPLEADOS/
│
├── Backend/
│   ├── controllers/
│   │   ├── empleado.controller.js
│   │   └── usuario.controller.js
│   │
│   ├── models/
│   │   ├── empleado.js
│   │   ├── producto.js
│   │   └── usuario.js
│   │
│   ├── routes/
│   │   ├── empleado.route.js
│   │   ├── producto.route.js
│   │   └── usuario.route.js
│   │
│   ├── database.js
│   └── index.js
│
├── node_modules/
│
├── package.json
├── package-lock.json
└── README.md
```

**Descripción rápida:**
- `controllers/`: Lógica de negocio y controladores de cada entidad.
- `models/`: Esquemas de Mongoose para empleados, productos y usuarios.
- `routes/`: Definición de rutas de la API para cada entidad.
- `database.js`: Configuración y conexión a MongoDB.
- `index.js`: Archivo principal del servidor Express.

